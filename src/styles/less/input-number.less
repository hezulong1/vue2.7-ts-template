.@{ns}-input-number {
  position: relative;
  display: inline-flex;
  width: 100%;
  min-width: calc((@input-height + @input-padding-horizontal) * 2 + ~'- @{border-width-base} * 2 + 1em'); // 至少显示一位数字
  vertical-align: middle;

  &__increase,
  &__decrease {
    position: absolute;
    top: @border-width-base;
    bottom: @border-width-base;
    z-index: 1;

    .util-box-center();
    width: @input-height;
    height: auto;
    background: @fill-light;
   
    text-align: center;
    color: @input-font-color;
    font-size: @input-font-size;
    user-select: none;
    box-sizing: border-box;
    cursor: pointer;

    &:hover {
      color: @color-primary;

      .@{ns}-input-number:not(.is-disabled) & ~ .@{ns}-input:not(.is-disabled) .@{ns}-input__inner:not(:focus) {
        border-color: @input-hover-border;
      }
    }

    &.is-disabled {
      color: @input-disabled-color;
      cursor: not-allowed;
    }
  }

  &__increase {
    right: @border-width-base;
    border-radius: 0 @input-border-radius @input-border-radius 0;
    border-left: @border-base;
  }

  &__decrease {
    left: @border-width-base;
    border-radius: @input-border-radius 0 0 @input-border-radius;
    border-right: @border-base;
  }

  &.is-disabled {
    .@{ns}-input-number__increase,
    .@{ns}-input-number__decrease {
      border-color: @input-disabled-border;
      color: @input-disabled-border;

      &:hover {
        color: @input-disabled-border;
        cursor: not-allowed;
      }
    }
  }

  &:not(.is-without-controls) {
    .@{ns}-input__inner {
      text-align: center;
      padding-right: calc(@input-height + @input-padding-horizontal + ~'- @{border-width-base}');
    }

    &:not(.is-controls-right) .@{ns}-input__inner {
      padding-left: calc(@input-height + @input-padding-horizontal + ~'- @{border-width-base}');
    }
  }

  &.is-controls-right {
    .@{ns}-input-number__increase,
    .@{ns}-input-number__decrease {
      height: calc(~'(@{input-height} - @{border-width-base} * 2) / 2');
      line-height: calc(~'(@{input-height} - @{border-width-base} * 2) / 2');

      [class*=el-icon] {
        font-size: inherit;
        transform: scale(.8);
      }
    }

    .@{ns}-input-number__increase {
      bottom: auto;
      border-radius: 0 @input-border-radius 0 0;
      border-bottom: @border-base;
    }

    .@{ns}-input-number__decrease {
      right: @border-width-base;
      top: auto;
      left: auto;
      border-right: none;
      border-left: @border-base;
      border-radius: 0 0 @input-border-radius 0;
    }
  }

  // Size
  .loopSize(@index) when (@index =< length(@sizes)) {
    @size: extract(@sizes, @index);

    @height-prop: ~'input-@{size}-height';
    @height: @@height-prop;
    @radius-prop: ~'input-@{size}-border-radius';
    @radius: @@radius-prop;
    @font-size-prop: ~'input-@{size}-font-size';
    @font-size: @@font-size-prop;
    @padding-horizontal-prop: ~'input-@{size}-padding-horizontal';
    @padding-horizontal: @@padding-horizontal-prop;

    &--@{size} {
      min-width: calc((@height + @padding-horizontal) * 2 + ~'- @{border-width-base} * 2 + 1em');

      .@{ns}-input-number__increase,
      .@{ns}-input-number__decrease {
        width: @height;
        font-size: @font-size;
      }

      &:not(.is-without-controls) {
        .@{ns}-input__inner {
          padding-right: calc(@height + @padding-horizontal + ~'- @{border-width-base}');
        }

        &:not(.is-controls-right) .@{ns}-input__inner {
          padding-left: calc(@height + @padding-horizontal + ~'- @{border-width-base}');
        }
      }

      &.is-controls-right {
        .@{ns}-input-number__increase,
        .@{ns}-input-number__decrease {
          height: calc(~'(@{height} - @{border-width-base} * 2) / 2');
          line-height: calc(~'(@{height} - @{border-width-base} * 2) / 2');
        }

        .@{ns}-input-number__increase {
          border-radius: 0 @radius 0 0;
        }
    
        .@{ns}-input-number__decrease {
          border-radius: 0 0 @radius 0;
        }
      }
    }
    .loopSize(@index + 1);
  }
  .loopSize(1);
}
